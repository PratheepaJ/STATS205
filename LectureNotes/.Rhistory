dwtest(fit)
View(p1)
# number of students
K = 8
# number of correct picks
k = 2
pvalue = sum(dbinom(k:K,K,1/20)); pvalue
data(napping)
install.packages("SensoMineR")
library(SensoMineR)
data(napping)
napping.don
napping
data(napping.words)
napping.words
library(ade4)
class(napping.words)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
rownames(df)
row.scores = data.frame(li = wine.pca$li, SampleCode = rownames(df))
row.scores <- row_scores %>%
left_join(data.frame(SampleCode = rownames(df)))
library(magrittr)
row.scores = row_scores %>%
left_join(data.frame(SampleCode = rownames(df)))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
library(dplyr)
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
row.scores
p = ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2), size = 3)  +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals_prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals_prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10))+
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
p = ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2), size = 3)  +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10))+
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
p
library(SensoMineR)
data(napping)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
row.scores = data.frame(li = wine.pca$li, SampleCode = rownames(df))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
evals = wine.pca$eig
p = ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2), size = 3)  +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10))+
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
p
p = ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode), size = 3)  +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10)) +
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
p
ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode), size = 3)
row.scores
class(row.scores$SampleCode)
row.scores$SampleCode = as.character(row.scores$SampleCode)
ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode), size = 3)
ggplot() +
geom_point(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode), size = 3)
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point( size = 3)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point( size = 3)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0)
p = ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10))
p
knitr::opts_chunk$set(echo = TRUE, fig.width = 5, fig.height = 5, fig.align="center",message=FALSE, warning=FALSE, out.width = '70%')
## z^{.05}
qnorm(.05)
## z^{.95}
qnorm(.95)
Table2.1.ET = list(treatment = c(94, 197,
16, 38, 99, 141, 23),
control = c(52, 104, 146, 10,
51, 30, 40, 27, 46))
x = Table2.1.ET$control
n = length(x)
theta.hat = round(mean(x), digits = 2)
theta.hat
se.theta.hat = round(sd(x)/sqrt(n), digits = 2)
se.theta.hat
## z^{1-.05}
z = round(qnorm(.95), digits = 3)
z
ci.standard = round(theta.hat + c(-1, 1)*z*se.theta.hat,
digits = 2); ci.standard
##t^{.05}
qt(.05, df = 9)
##t^{.95}
qt(.95, df = 9)
x
length(x)
ci.student.t = round(theta.hat + c(qt(.05, df = 9),
qt(.95, df = (length(x)-1)))*se.theta.hat,
digits = 2)
ci.student.t
ci.standard
knitr::opts_chunk$set(echo = TRUE, fig.width = 5, fig.height = 5, fig.align="center",message=FALSE, warning=FALSE, out.width = '70%')
library(ggplot2)
library(gridExtra)
x = rnorm(100, mean = 10, sd  = 1.5)
y = x + rnorm(n = 100)
df = data.frame(x = x, y = y)
p1 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(5, 15)) + ylim(c(5, 15))
p2 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(0, 25)) + ylim(c(0, 30))
grid.arrange(p1,p2, nrow =1)
# number of students
K = 8
# number of correct picks
k = 2
pvalue = sum(dbinom(k:K,K,1/20)); pvalue
# number of students
K = 8
# number of correct picks
k = 4
pvalue = sum(dbinom(k:K,K,1/8)); pvalue
library(SensoMineR)
data(napping)
dim(napping.words)
library(SensoMineR)
data(napping)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
row.scores = data.frame(li = wine.pca$li, SampleCode = rownames(df))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
evals = wine.pca$eig
row.scores$SampleCode = as.character(row.scores$SampleCode)
p = ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10))
p
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")
p = ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10)) + xlim(c(-4, 6))
p
ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw()
p = ggplot(data = row.scores, aes(x = li.Axis1, y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]", round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]", round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878", fill = alpha("white", 0)), plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8), axis.text = element_text(size = 1),  axis.title = element_text(size = 10)) +
xlim(c(-4, 6)) +
ylim(c(3,6))
napping.words
rownames(napping.words)
ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
library(SensoMineR)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
row.scores = data.frame(li = wine.pca$li,
SampleCode = rownames(df))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
evals = wine.pca$eig
#row.scores$SampleCode = as.character(row.scores$SampleCode)
p = ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode, col = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title=element_text(size = 8), legend.text=element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))
p
p = ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode, col = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title = element_text(size = 8),
legend.text = element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = NULL)
p
p = ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode, col = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("")+
theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title = element_text(size = 8),
legend.text = element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'none')
p
knitr::opts_chunk$set(echo = TRUE, fig.width = 5, fig.height = 5, fig.align="center",message=FALSE, warning=FALSE, out.width = '70%')
library(ggplot2)
library(gridExtra)
x = rnorm(100, mean = 10, sd  = 1.5)
y = x + rnorm(n = 100)
df = data.frame(x = x, y = y)
p1 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(5, 15)) + ylim(c(5, 15))
p2 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(0, 25)) + ylim(c(0, 30))
grid.arrange(p1,p2, nrow =1)
# number of students
K = 8
# number of correct picks
k = 2
pvalue = sum(dbinom(k:K,K,1/20)); pvalue
# number of students
K = 8
# number of correct picks
k = 4
pvalue = sum(dbinom(k:K,K,1/8)); pvalue
library(png)
library(grid)
img <- readPNG("procruster_analysis.png")
grid.raster(img)
library(SensoMineR)
data(napping)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
row.scores = data.frame(li = wine.pca$li,
SampleCode = rownames(df))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
evals = wine.pca$eig
p = ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode, col = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("PCA scores for wine data")
p + theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title = element_text(size = 8),
legend.text = element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'none')
install.packages("bootSVD")
library(bootSVD)
Y<-simEEG(n=100, centered=TRUE, wide=TRUE)
b<-bootSVD(Y, B=50, K=2, output=
c('initial_SVD', 'HD_moments', 'full_HD_PC_dist',
'HD_percentiles'), verbose=interactive())
matplot(b$initial_SVD$V[,1:4],type='l',main='Fitted PCs',lty=1)
legend('bottomright',paste0('PC',1:4),col=1:4,lty=1,lwd=2)
### Import data
## Upload the dataset data_ExportWine.csv
wine <- read.table("data_PCA_ExpertWine.csv",header=TRUE, sep=";", dec=".", row.names=1)
install.packages("FactoMineR")
library(FactoMineR)
data("wine")
head(wine)
dim(wine)
res.pca = PCA(wine,ncp=5, quali.sup = 1:2)
plotellipses(res.mfa,keepvar="Label")
plotellipses(res.pca,keepvar="Label")
plotellipses(res.pca, means = FALSE)
plotellipses(res.pca, keepvar = FALSE,means = FALSE)
plotellipses(res.pca, keepvar = "Label",means = FALSE)
res.pca = PCA(wine,ncp=5, quali.sup = 1:2)
res.pca = PCA(wine,ncp=5, quali.sup = 1)
head(wine)
res.pca = PCA(wine[,-2],ncp=5, quali.sup = 1)
head(df)
knitr::opts_chunk$set(echo = TRUE, fig.width = 5, fig.height = 5, fig.align="center",message=FALSE, warning=FALSE, out.width = '70%')
library(ggplot2)
library(gridExtra)
x = rnorm(100, mean = 10, sd  = 1.5)
y = x + rnorm(n = 100)
df = data.frame(x = x, y = y)
p1 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(5, 15)) + ylim(c(5, 15))
p2 = ggplot(df) + geom_point(aes(x = x, y = y)) +
xlim(c(0, 25)) + ylim(c(0, 30))
grid.arrange(p1,p2, nrow =1)
# number of students
K = 8
# number of correct picks
k = 2
pvalue = sum(dbinom(k:K,K,1/20)); pvalue
# number of students
K = 8
# number of correct picks
k = 4
pvalue = sum(dbinom(k:K,K,1/8)); pvalue
library(png)
library(grid)
img <- readPNG("procruster_analysis.png")
grid.raster(img)
library(SensoMineR)
data(napping)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
df2 = mutate(df, wine = rownames(df))
pca.wine  = PCA(df2, ncp = 5, quali.sup = 1)
head(df2)
dim(df2)
pca.wine  = PCA(df2, ncp = 5, quali.sup = 15)
plotellipses(pca.wine, keepvar = "wine")
plotellipses(pca.wine, keepvar = "wine", type = "g")
plotellipses(pca.wine, keepvar = "all", type = "g")
library(SensoMineR)
data(napping)
data(napping.words)
library(ade4)
library(magrittr)
library(dplyr)
df = napping.words
wine.pca = dudi.pca(df, scannf = F, nf = 3)
row.scores = data.frame(li = wine.pca$li,
SampleCode = rownames(df))
row.scores = row.scores %>%
left_join(data.frame(SampleCode = rownames(df)))
evals.prop = 100 * (wine.pca$eig / sum(wine.pca$eig))
evals = wine.pca$eig
p = ggplot(data = row.scores, aes(x = li.Axis1,
y = li.Axis2, label = SampleCode, col = SampleCode)) +
geom_point(size = 1)  +
geom_text(aes(label = SampleCode),
hjust=0, vjust=0.1) +
labs(x = sprintf("Axis 1 [%s%% variance]",
round(evals.prop[1], 1)),
y = sprintf("Axis 2 [%s%% variance]",
round(evals.prop[2], 1))) +
ggtitle("PCA scores for wine data")
p + theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title = element_text(size = 8),
legend.text = element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'none') + xlim(c(-4, -8))
p + theme_bw() +
theme(panel.border = element_rect(color = "#787878",
fill = alpha("white", 0)),
plot.title = element_text(hjust = .5), legend.title = element_text(size = 8),
legend.text = element_text(size=8),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.position = 'none') + xlim(c(-4, 8))
A = matrix(c(3,2,2,2,3,-2),nrow = 2,byrow = TRUE)
A
AAT = A %*% t(A)
AAT
ei <- eigen(AAT)
ei$values
t(A) %*% A - 25* diag(3)
t(A) %*% A - 9* diag(3)
v1 <- matrix(c(1/sqrt(2),1/sqrt(2), 0), byrow = F, nrow =3)
u1 <- (A %*% v1)/5
u1
v2 <- matrix(c(1/sqrt(18),-1/sqrt(18), 4/sqrt(18)), byrow = F, nrow =3)
u2 <- (A %*% v2)/3
u2
U <- cbind(u1,u2)
U
D <- matrix(c(5,0,0,0,3,0), nrow = 2, byrow = T)
D
V <-  matrix(c(1/sqrt(2),1/sqrt(2), 0,1/sqrt(18),-1/sqrt(18), 4/sqrt(18),2/3, -2/3, -1/3 ), byrow = F, nrow = 3)
V
U*D*t(V)
U%*%D%*%t(V)
U%*%D%*%V
U%*%D%*%t(V)
